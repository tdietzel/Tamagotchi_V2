@using Tamagotchis.Models

<!DOCTYPE html>
<html>

<head>
  <title>Your Tamagotchi</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
  <link rel="stylesheet" href="~/css/petsIndex.css">
  <script src="~/js/petActions.js"></script>
</head>

<body>

  @{
    string eat;
    string sleep;
    string play;
    string petImg;
    string dead;
  }

  @if (Model == null || Model.Count == 0) 
  {
    <div class="container">
      <div id="no-pets">
        <h1>There are no pets to display. Please create a pet!</h1>
        @Html.ActionLink("Make a new pet!", "Create", new { id = ViewBag.UserId })
      </div>
    </div>
  }
  else
  {
    <script>

      @*function delay(ms) {
      return new Promise(resolve => setTimeout(resolve,ms));
      }
      async function hatchPetTimer(petId) {
      await delay(10000);
      document.getElementById('hatchForm-' + petId).submit();
      }

      async function sleepPetTimer(petId) {
      await delay(5000);
      document.getElementById('sleeping-' + petId).submit();
      }

      async function playPetTimer(petId) {
      await delay(10000); // Adjust the delay for playing
      document.getElementById('playing-' + petId).submit();
      }

      async function feedPetTimer(petId) {
      await delay(15000); // Adjust the delay for feeding
      document.getElementById('eating-' + petId).submit();
      }*@

      @foreach (Pet pet in Model)
      {
        if (pet.Type == "Cat")
        {
          eat = "/img/kitten-food.png";
          sleep = "/img/kitten-sleeping.png";
          play = "/img/kitten-playing.png";
          petImg = "/img/kitten.png";
          dead = "/img/kitten-grave.png";
        }
        else
        {
          eat = "/img/food.png";
          sleep = "/img/sleep.png";
          play = "/img/playing.png";
          petImg = "/img/dog.png";
          dead = "/img/deadDog.png";
        }
          <div class="pet">
          @if (pet.Alive)
          {
            @using (Html.BeginForm("Abandon", "Pets", FormMethod.Post))
            {
                <input type="hidden" name="petId" value="@pet.PetId" />
                <input type="hidden" name="userId" value="@pet.Id" />
                <input type="hidden" name="action" value="delete" />
                <input type="submit" id="abandon" value="Abandon Pet" />
            }

              <h1>@pet.Name</h1>

            @if (!pet.IsHatched)
            {
                <div class='action'>
                  <img src="~/img/egg.png" alt="Egg" />
                  <h3>Hatching...</h3>
                </div>

                <form action="/pets/hatch" method="post" id='@($"hatchForm-{pet.PetId}")'>
                  <input type="hidden" name="petId" value="@pet.PetId" />
                  <input type="hidden" name="userId" value="@pet.Id" />
                  <button onclick="hatchPet(this)" data-petid="@pet.PetId" style="display: none;">hatch</button>
                </form>

                <script type="text/javascript">   @*Tried to remove this thing, to clean up the file. The form above now references petActions.js in wwwroot. If you remove this script, the page doesn't load correctly*@

                @* setTimeout(() => {
          document.getElementById('hatchForm-@pet.PetId').submit();
          }, 10000); *@

                  function delay(ms) {
                                                    return new Promise(resolve => setTimeout(resolve,ms));
                                                  }
                  async function hatchPet() {
                    await delay(10000);
                  document.getElementById('hatchForm-@pet.PetId').submit();
                                                  }
                  hatchPet();

                @*hatchPetTimer('@pet.PetId');*@

          </script>
            }
            else if (pet.IsSleeping)
            {
          <div class='action-sleep'>
            <img src="@sleep" alt="Sleeping" />
            <h3>sleeping... zZz</h3>
          </div>

          <form action="/pets/action/sleeping" method="post" id='@($"sleeping-{pet.PetId}")'>
            <input type="hidden" name="petId" value="@pet.PetId" />
            <input type="hidden" name="userId" value="@pet.Id" />
            <input type="hidden" name="action" value="sleep" />
            <button type="submit" style="display: none">Sleep</button>
          </form>

              RenderHearts(pet.Fullness);
          <script>
                @* setTimeout(function () {
          var sleepForm = document.getElementById('sleeping-' + @pet.PetId);
          console.log(sleepForm);
          document.getElementById('sleeping-' + @pet.PetId).submit();
          }, 5000); *@

                  function delay(ms) {
                                                    return new Promise(resolve => setTimeout(resolve,ms));
                                                  }
                  async function sleepPet() {
                    await delay(5000);
                  document.getElementById('sleeping-@pet.PetId').submit();
                                                  }
                  sleepPet();

                @*sleepPetTimer('@pet.PetId');*@


          </script>
            }
            else if (pet.IsPlaying)
            {
          <div class='action'>
            <img src="@play" alt="Playing" />
            <h3>@pet.Name is playing!</h3>
          </div>

          <form action="/pets/action/playing" method="post" id='@($"playing-{pet.PetId}")'>
            <input type="hidden" name='petId' value="@pet.PetId" />
            <input type="hidden" name="userId" value="@pet.Id" />
            <input type="hidden" name="action" value="play" />
            <button type="submit" style="display: none">Play</button>
          </form>

          <script>
                @*setTimeout(function () {
          var playForm = document.getElementById('playing-' + @pet.PetId);
          console.log(playForm);
          document.getElementById('playing-' + @pet.PetId).submit();
          }, 5000);*@

                  function delay(ms) {
                                                    return new Promise(resolve => setTimeout(resolve,ms));
                                                  }
                  async function playPet() {
                    await delay(5000);
                  document.getElementById('playing-@pet.PetId').submit();
                                                  }
                  playPet();

                @*playPetTimer('@pet.PetId');*@


          </script>
            }
            else if (pet.IsFeeding)
            {
          <div class='action'>
            <img src="@eat" alt="Eating" />
            <h3>@pet.Name is eating...</h3>
          </div>

          <form action="/pets/action/eating" method="post" id='@($"eating-{pet.PetId}")'>
            <input type="hidden" name="petId" value="@pet.PetId" />
            <input type="hidden" name="userId" value="@pet.Id" />
            <input type="hidden" name="action" value="feed" />
            <button type="submit" style="display: none">Feed</button>
          </form>

          <script>
                @*setTimeout(function () {
          var eatForm = document.getElementById('eating-'+ @pet.PetId);
          console.log(eatForm);
          document.getElementById("eating-" + @pet.PetId).submit();
          }, 5000);*@

                  function delay(ms) {
                                                    return new Promise(resolve => setTimeout(resolve,ms));
                                                  }
                  async function feedPet() {
                    await delay(5000);
                  document.getElementById('eating-@pet.PetId').submit();
                                                  }
                  feedPet();

                @*feedPetTimer('@pet.PetId');*@

          </script>
            }
            else
            {
          <img src="@petImg" alt="Pet" />

              RenderHearts(pet.Fullness);
              RenderEnergy(pet.Energy);
              RenderHappiness(pet.Attention);

              @Html.ActionLink("View Pet Details", "Show", new { id = pet.PetId })

            }
          }
          else
          {
        <h1>@pet.Name</h1>
        <img src="@dead" alt="Dead Pet" />
        <h4>@pet.Name has died :(</h4>

            @using (Html.BeginForm("BuryAction", "Pets", FormMethod.Post))
            {
          <input type="hidden" name="petId" value="@pet.PetId" />
          <input type="hidden" name="userId" value="@pet.Id" />
          <input type="hidden" name="action" value="delete" />
          <input type="submit" value="Bury @pet.Name" id="abandon" />
            }
          }
      </div>
      }

      @Html.ActionLink("Head to the shop!", "Show", "Shop") @* style the link with shop-btn *@
    <div class="inventory-style">
      <h1 class="inventory-title">Inventory</h1>
      <div class="inventory">
      @* @foreach (var food in Pet._inventory)
      {
      <div class="inventory-item">
      <p>@food.Name</p>
      <p class="hp">@food.Fullness</p>
      <img class="fullness" src="~/img/hearts.png" />
      </div>
      }
      @foreach (var toy in Pet._inventoryToy)
      {
      <div class="inventory-item">
      <p>@toy.Name</p>
      <p class="excitement">@toy.Excitement</p>
      <img class="fullness" src="~/img/lightning-bolt.png" />
      </div>
      } *@
      </div>
    </div>
    </script>
  }

  @functions
  {
    void RenderHearts(int value)
    {
      <div class="health-hearts">
        @for (var i = 0; i < 5; i++)
        {
          <img id="heart" src="/img/@(i * 20 < value ? "hearts.png" : "heart.png")" alt="Heart" />
        }
      </div>
    }
    void RenderEnergy(int value)
    {
      <div class="health-hearts">
        @for (var i = 0; i < 5; i++)
        {
          <img id="heart" src="/img/@(i * 20 < value ? "lightning-bolt.png" : "lightning-bolt-black.png")"
            alt="Lightning Bolt" />
        }
      </div>
    }
    void RenderHappiness(int value)
    {
      <div class="health-hearts">
        <img id="happiness" src="/img/@(value > 70 ? "happy-face.png" : value > 40 ? "neutral-face.png" : "sad-face.png")"
          alt="Happiness" />
      </div>
    }
  }
  <!-- To make life easier for testing -->
  @Html.ActionLink("Make another pet?", "Create", new { id = ViewBag.UserId }) 

</body>

</html>